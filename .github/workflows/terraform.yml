name: Docker Build and Push to Artifact Registry

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: arboreal-cosmos-440011-r8
  REGION: asia-southeast2
  REPOSITORY_ID: warung-kopi
  IMAGE_NAME: test-akmal-app
  SERVICE_URL: https://warung-kopi-744240945004.asia-southeast2.run.app
  STATUS : berhasil
  SERVICE_NAME: warung-kopi
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan & Apply
      run: |
        terraform plan
        terraform apply -auto-approve

    - name: Configure Docker to use Artifact Registry
      run: |
        gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

    - name: Build Docker Image
      run: |
        docker build -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY_ID}/${IMAGE_NAME}:latest .

    - name: Push Docker Image to Artifact Registry
      run: |
        docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPOSITORY_ID}/${IMAGE_NAME}:latest
    - name: Deploy to Cloud Run
      env:  
       REPOSITORY_ID: asia-southeast2-docker.pkg.dev/${{ env.PROJECT_ID }}/warung-kopi

      run: |
          DEPLOY_OUTPUT=$(gcloud run deploy warung-kopi  \
            --image "$REPOSITORY_ID/test-akmal-app:latest" \
            --platform managed \
            --region asia-southeast2 \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 1 \
            --allow-unauthenticated \
            --project ${{ env.PROJECT_ID  }} \
            --format=json)

    - name: Verify HTTP 200 from Cloud Run
      run: |
        SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} \
          --platform managed \
          --region ${REGION} \
          --project ${PROJECT_ID} \
          --format='value(status.url)')

        echo "Waiting for service to be available at $SERVICE_URL..."

        for i in {1..10}; do
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$SERVICE_URL")
          echo "Attempt $i: Status code = $STATUS"
          if [[ "$STATUS" == "200" ]]; then
            echo "✅ Application is reachable and returned HTTP 200."
            exit 0
          fi
          sleep 5
        done

        echo "❌ Application did not return HTTP 200 after multiple attempts."
        exit 1